#!/usr/bin/env zsh

PH_MARKS_HOME=${PH_MARKS_HOME:-${HOME}/.pornhub}

readonly CURRENT=$(readlink -f "${BASH_SOURCE:-$0}")
readonly REDRAW_KEY="Âµ"
declare -r -x UEBERZUG_FIFO=${UEBERZUG_FIFO:-$(mktemp --dry-run --suffix "fzf-x-ueberzug")}

source "${_PH_MARKS_PLUGIN_DIR}/src/ph-marks.zsh"

logg() {
    echo "log> $*" >> ~/tmp/log
}


start_ueberzug() {
    mkfifo "${UEBERZUG_FIFO}"
    ueberzug layer --parser simple --silent <"${UEBERZUG_FIFO}" &
    # prevent EOF
    exec 3>"${UEBERZUG_FIFO}"
}


draw_preview() {
    local args=($1)
    local file=${${(z)args}[1]}

    COLUMNS=$(( COLUMNS - 4 ))
    LINES=$(( LINES / 2 - 2 ))

    cmds=(
        action "add"
        identifier "preview"
        x "1"
        y "1"
        width "${COLUMNS}"
        height "${LINES}"
        scaler "fit_contain"
        scaling_position_x "0.5"
        scaling_position_y "0.5"
        path "${file}"
    )

    IFS=$'\t'; cat <<<"${cmds[*]}" >"${UEBERZUG_FIFO}"
}


print_on_winch() {

    perl -e '
        require "sys/ioctl.ph";
        while (1) {
            local $SIG{WINCH} = sub {
                ioctl(STDIN, &TIOCSTI, $_) for split "", join " ", @ARGV;
            };
            sleep;
        }' \
        "${@}" </dev/tty &

    echo $!
}


main() {
    local perl_pid
    read perl_pid < <(print_on_winch "${REDRAW_KEY}${REDRAW_KEY}")

    trap "kill ${perl_pid}" EXIT

    start_ueberzug

    for file in "${PH_MARKS_HOME}"/*.jpg; do
        echo "${file}" "$(.ph_parse_json '.title' "${file:r}.info.json")"
    done |

    fzf --preview "${CURRENT} draw_preview {}" \
        --preview-window "up" \
        --bind "${REDRAW_KEY}:toggle-preview+toggle-preview" \
        --multi \
        --with-nth 2.. \
        "${@}" |

    while read -r line; do
        echo "${${line%% *}:t:r}"
    done
}


"$@"
